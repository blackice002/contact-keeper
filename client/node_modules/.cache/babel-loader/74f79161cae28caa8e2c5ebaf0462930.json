{"ast":null,"code":"import _slicedToArray from \"/Users/blackice/Desktop/Udemy_Project/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/blackice/Desktop/Udemy_Project/contact-keeper/client/src/context/contact/ContactState.js\";\nimport React, { useReducer } from \"react\";\nimport axios from 'axios';\nimport ContactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from \"../types\";\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null,\n    error: null\n  };\n\n  const _useReducer = useReducer(contactReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //Add Contact\n\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //Set current contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //Clear current contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //Filter Contact\n\n\n  const filterContact = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; //clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      addContact,\n      filtered: state.filtered,\n      error: state.error,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContact,\n      clearFilter\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/blackice/Desktop/Udemy_Project/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","ContactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","ContactState","props","initialState","contacts","current","filtered","error","state","dispatch","addContact","contact","config","headers","res","post","type","payload","data","err","response","msg","deleteContact","id","setCurrent","clearCurrent","updateContact","filterContact","text","clearFilter","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SACEC,WADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,cALF,EAMEC,eANF,EAOEC,YAPF,EAQEC,aARF,QASO,UATP;;AAWA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,QAAQ,EAAE,EADS;AAEnBC,IAAAA,OAAO,EAAE,IAFU;AAGnBC,IAAAA,QAAQ,EAAE,IAHS;AAInBC,IAAAA,KAAK,EAAC;AAJa,GAArB;;AAD4B,sBAOFlB,UAAU,CAACG,cAAD,EAAiBW,YAAjB,CAPR;AAAA;AAAA,QAOrBK,KAPqB;AAAA,QAOdC,QAPc,oBAS5B;;;AAEA,QAAMC,UAAU,GAAG,MAAMC,OAAN,IAAiB;AACpC,UAAMC,MAAM,GAAE;AACbC,MAAAA,OAAO,EAAC;AACN,wBAAe;AADT;AADK,KAAd;;AAKF,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMxB,KAAK,CAACyB,IAAN,CAAW,eAAX,EAA4BJ,OAA5B,EAAqCC,MAArC,CAAlB;AACAH,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAEvB,WAAR;AAAqBwB,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAAlC,OAAD,CAAR;AACD,KAHD,CAGE,OAAOC,GAAP,EAAY;AACZV,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAEhB,aADC;AAETiB,QAAAA,OAAO,EAACE,GAAG,CAACC,QAAJ,CAAaC;AAFZ,OAAD,CAAR;AAID;AAGE,GAjBD,CAX4B,CA6B5B;;;AAEA,QAAMC,aAAa,GAAGC,EAAE,IAAI;AAC1Bd,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAEtB,cAAR;AAAwBuB,MAAAA,OAAO,EAAEM;AAAjC,KAAD,CAAR;AACD,GAFD,CA/B4B,CAkC5B;;;AAEA,QAAMC,UAAU,GAAGb,OAAO,IAAI;AAC5BF,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAErB,WAAR;AAAqBsB,MAAAA,OAAO,EAAEN;AAA9B,KAAD,CAAR;AACD,GAFD,CApC4B,CAuC5B;;;AACA,QAAMc,YAAY,GAAG,MAAM;AACzBhB,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAEpB;AAAR,KAAD,CAAR;AACD,GAFD,CAxC4B,CA2C5B;;;AACA,QAAM8B,aAAa,GAAGf,OAAO,IAAI;AAC/BF,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAEnB,cAAR;AAAwBoB,MAAAA,OAAO,EAAEN;AAAjC,KAAD,CAAR;AACD,GAFD,CA5C4B,CA+C5B;;;AACA,QAAMgB,aAAa,GAAGC,IAAI,IAAI;AAC5BnB,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAElB,eAAR;AAAyBmB,MAAAA,OAAO,EAAEW;AAAlC,KAAD,CAAR;AACD,GAFD,CAhD4B,CAqD5B;;;AAGA,QAAMC,WAAW,GAAG,MAAM;AACxBpB,IAAAA,QAAQ,CAAC;AAACO,MAAAA,IAAI,EAAEjB;AAAP,KAAD,CAAR;AACD,GAFD;;AAGA,SACE,oBAAC,cAAD,CAAgB,QAAhB;AACE,IAAA,KAAK,EAAE;AACLK,MAAAA,QAAQ,EAAEI,KAAK,CAACJ,QADX;AAELC,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAFV;AAGLK,MAAAA,UAHK;AAILJ,MAAAA,QAAQ,EAACE,KAAK,CAACF,QAJV;AAKLC,MAAAA,KAAK,EAACC,KAAK,CAACD,KALP;AAMLe,MAAAA,aANK;AAOLE,MAAAA,UAPK;AAQLC,MAAAA,YARK;AASLC,MAAAA,aATK;AAULC,MAAAA,aAVK;AAWLE,MAAAA;AAXK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeG3B,KAAK,CAAC4B,QAfT,CADF;AAmBD,CA9ED;;AAgFA,eAAe7B,YAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport axios from 'axios'\nimport ContactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\nimport {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n  CONTACT_ERROR \n} from \"../types\";\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null,\n    error:null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  //Add Contact\n\n  const addContact = async contact => {\n  const config ={\n   headers:{\n     'Content-Type':'application/json'\n   }\n }\ntry {\n  const res = await axios.post('/api/contacts', contact, config)\n  dispatch({ type: ADD_CONTACT, payload: res.data });\n} catch (err) {\n  dispatch({\n    type: CONTACT_ERROR ,\n  payload:err.response.msg\n  })\n}\n\n    \n  };\n  //Delete Contact\n\n  const deleteContact = id => {\n    dispatch({ type: DELETE_CONTACT, payload: id });\n  };\n  //Set current contact\n\n  const setCurrent = contact => {\n    dispatch({ type: SET_CURRENT, payload: contact });\n  };\n  //Clear current contact\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n  //Update Contact\n  const updateContact = contact => {\n    dispatch({ type: UPDATE_CONTACT, payload: contact });\n  };\n  //Filter Contact\n  const filterContact = text => {\n    dispatch({ type: FILTER_CONTACTS, payload: text });\n  };\n\n\n  //clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({type: CLEAR_FILTER})\n  }\n  return (\n    <ContactContext.Provider\n      value={{\n        contacts: state.contacts,\n        current: state.current,\n        addContact,\n        filtered:state.filtered,\n        error:state.error,\n        deleteContact,\n        setCurrent,\n        clearCurrent,\n        updateContact,\n        filterContact,\n        clearFilter\n      }}\n    >\n      {props.children}\n    </ContactContext.Provider>\n  );\n};\n\nexport default ContactState;\n"]},"metadata":{},"sourceType":"module"}