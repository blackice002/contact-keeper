{"ast":null,"code":"import _defineProperty from \"/Users/blackice/Desktop/Udemy_Project/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/blackice/Desktop/Udemy_Project/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/blackice/Desktop/Udemy_Project/contact-keeper/client/src/components/contacts/ContactForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport ContactContext from \"../../context/contact/contactContext\";\n\nconst ContactForm = () => {\n  const contactContext = useContext(ContactContext);\n  const addContact = contactContext.addContact,\n        updateContact = contactContext.updateContact,\n        current = contactContext.current,\n        clearCurrent = contactContext.clearCurrent;\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        type: \"personal\"\n      });\n    }\n  }, [contactContext, current]);\n\n  const _useState = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    type: \"personal\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        contact = _useState2[0],\n        setContact = _useState2[1];\n\n  const name = contact.name,\n        email = contact.email,\n        phone = contact.phone,\n        type = contact.type;\n\n  const onChange = e => setContact(_objectSpread({}, contact, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (current === null) {\n      addContact(contact);\n    } else {\n      updateContact();\n    }\n\n    clearAll();\n  };\n\n  const clearAll = () => {\n    clearCurrent();\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, current ? 'Edit Contact' : 'Add Contact'), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    value: name,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email\",\n    name: \"email\",\n    value: email,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Phone\",\n    name: \"phone\",\n    value: phone,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Contact Type\"), React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"personal\",\n    onChange: onChange,\n    checked: type === \"personal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), \"  \", \"Personal\", \" \", React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"professional\",\n    onChange: onChange,\n    checked: type === \"professional\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), \"  \", \"Professional\", \" \", React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: current ? 'Update Contact' : 'Add Contact',\n    className: \"btn btn-primary btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })), current && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-lifgt btn-block\",\n    onClick: clearAll,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Clear\")));\n};\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/blackice/Desktop/Udemy_Project/contact-keeper/client/src/components/contacts/ContactForm.js"],"names":["React","useState","useContext","useEffect","ContactContext","ContactForm","contactContext","addContact","updateContact","current","clearCurrent","setContact","name","email","phone","type","contact","onChange","e","target","value","onSubmit","preventDefault","clearAll"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport ContactContext from \"../../context/contact/contactContext\";\n\nconst ContactForm = () => {\n  const contactContext = useContext(ContactContext);\n\n  const {addContact, updateContact, current, clearCurrent}= contactContext;\n\n  useEffect(()=>{\n    if(current!==null){\n      setContact(current);\n\n    }else{\n      setContact({\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        type: \"personal\"\n      });\n    }\n  },[contactContext, current])\n\n  const [contact, setContact] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    type: \"personal\"\n  });\n\n  const { name, email, phone, type } = contact;\n\n  const onChange = e =>\n    setContact({ ...contact, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\nif(current=== null){\n  addContact(contact);\n} else{\n  updateContact();\n}\n\n  clearAll();\n  };\n  \n  const clearAll =()=>{\nclearCurrent();\n  }\n\n  return (\n    <form onSubmit={onSubmit}>\n      <h2 className=\"text-primary\">{current ? 'Edit Contact': 'Add Contact'}</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Name\"\n        name=\"name\"\n        value={name}\n        onChange={onChange}\n      />\n      <input\n        type=\"email\"\n        placeholder=\"Email\"\n        name=\"email\"\n        value={email}\n        onChange={onChange}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Phone\"\n        name=\"phone\"\n        value={phone}\n        onChange={onChange}\n      />\n      <h5>Contact Type</h5>\n      <input\n        type=\"radio\"\n        name=\"type\"\n        value=\"personal\"\n        onChange={onChange}\n        checked={type === \"personal\"}\n      />\n      {\"  \"}Personal{\" \"}\n      <input\n        type=\"radio\"\n        name=\"type\"\n        value=\"professional\"\n        onChange={onChange}\n        checked={type === \"professional\"}\n      />\n      {\"  \"}Professional{\" \"}\n      <div>\n        <input\n          type=\"submit\"\n          value={current ? 'Update Contact': 'Add Contact'}\n          className=\"btn btn-primary btn-block\"\n        />\n      </div>\n      {current && <div>\n        <button className=\"btn btn-lifgt btn-block\" onClick={clearAll}>Clear</button>\n      </div>}\n    </form>\n  );\n};\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}