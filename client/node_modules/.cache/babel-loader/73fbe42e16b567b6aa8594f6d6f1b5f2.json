{"ast":null,"code":"import _slicedToArray from \"/Users/blackice/Desktop/Udemy_Project/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/blackice/Desktop/Udemy_Project/contact-keeper/client/src/context/auth/AuthState.js\";\nimport React, { useReducer } from \"react\";\nimport axios from 'axios';\nimport AuthContext from \"./AuthContext\";\nimport authReducer from \"./AuthReducer\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from \"../types\";\nimport { userInfo } from \"os\";\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null\n  };\n\n  const _useReducer = useReducer(authReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //Load User\n  // register user\n\n\n  const register = async formData => {\n    const config = {\n      headers: {\n        'content-type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await asiox.post('/api/users', formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; //Login User\n  //Logout\n  //Clear Errors\n\n\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/Users/blackice/Desktop/Udemy_Project/contact-keeper/client/src/context/auth/AuthState.js"],"names":["React","useReducer","axios","AuthContext","authReducer","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","userInfo","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","user","error","state","dispatch","register","formData","config","headers","res","asiox","post","type","payload","data","err","response","msg","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SACEC,gBADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,aALF,EAMEC,UANF,EAOEC,MAPF,EAQEC,YARF,QASO,UATP;AAUA,SAASC,QAAT,QAAyB,IAAzB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAACC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADa;AAEnBC,IAAAA,eAAe,EAAC,IAFG;AAGnBC,IAAAA,OAAO,EAAC,IAHW;AAInBC,IAAAA,IAAI,EAAC,IAJc;AAKnBC,IAAAA,KAAK,EAAC;AALa,GAArB;;AADyB,sBAQCtB,UAAU,CAACG,WAAD,EAAcY,YAAd,CARX;AAAA;AAAA,QAQlBQ,KARkB;AAAA,QAQXC,QARW,oBAS3B;AACA;;;AACA,QAAMC,QAAQ,GAAG,MAAMC,QAAN,IAAgB;AAC/B,UAAMC,MAAM,GAAE;AACZC,MAAAA,OAAO,EAAC;AACN,wBAAgB;AADV;AADI,KAAd;;AAKF,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAACC,IAAN,CAAW,YAAX,EAAyBL,QAAzB,EAAmCC,MAAnC,CAAlB;AACAH,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAC5B,gBADE;AAEP6B,QAAAA,OAAO,EAACJ,GAAG,CAACK;AAFL,OAAD,CAAR;AAKD,KAPD,CAOE,OAAOC,GAAP,EAAY;AACZX,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAC3B,aADE;AAEP4B,QAAAA,OAAO,EAACE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBG;AAFnB,OAAD,CAAR;AAMD;AAEA,GAtBD,CAX2B,CAmC3B;AACA;AACA;;;AAEE,SACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACPrB,MAAAA,KAAK,EAAEO,KAAK,CAACP,KADN;AAEPG,MAAAA,eAAe,EAAEI,KAAK,CAACJ,eAFhB;AAGPC,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAHR;AAIPC,MAAAA,IAAI,EAAEE,KAAK,CAACF,IAJL;AAKPC,MAAAA,KAAK,EAAEC,KAAK,CAACD;AALN,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGR,KAAK,CAACwB,QATT,CADF;AAaD,CApDD;;AAsDA,eAAezB,SAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport axios from 'axios'\nimport AuthContext from \"./AuthContext\";\nimport authReducer from \"./AuthReducer\";\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS\n} from \"../types\";\nimport { userInfo } from \"os\";\n\nconst AuthState = props => {\n  const initialState = {\n    token:localStorage.getItem('token'),\n    isAuthenticated:null,\n    loading:true,\n    user:null,\n    error:null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState);\n//Load User\n// register user\nconst register = async formData=>{\n  const config ={\n    headers:{\n      'content-type': 'application/json'\n    }\n  }\ntry {\n  const res = await asiox.post('/api/users', formData, config);\n  dispatch({\n    type:REGISTER_SUCCESS,\n    payload:res.data\n\n  })\n} catch (err) {\n  dispatch({\n    type:REGISTER_FAIL,\n    payload:err.response.data.msg\n\n  })\n  \n}\n\n}\n\n//Login User\n//Logout\n//Clear Errors\n  \n  return (\n    <AuthContext.Provider\n      value={{\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}