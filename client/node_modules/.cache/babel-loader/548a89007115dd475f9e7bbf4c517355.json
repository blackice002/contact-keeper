{"ast":null,"code":"import _slicedToArray from \"/Users/blackice/Desktop/Udemy_Project/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/blackice/Desktop/Udemy_Project/contact-keeper/client/src/context/contact/ContactState.js\";\nimport React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport ContactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\nimport { GET_CONTACTS, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR, CLEAR_CONTACTS } from \"../types\";\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null\n  };\n\n  const _useReducer = useReducer(contactReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Get Contacts\n\n\n  const getContacts = async () => {\n    try {\n      const res = await axios.get('/api/contacts');\n      dispatch({\n        type: GET_CONTACTS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //Add Contact\n\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //Delete Contact\n\n\n  const deleteContact = async id => {\n    try {\n      await axios.delete(\"/api/contacts/\".concat(id));\n      dispatch({\n        type: DELETE_CONTACT,\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // clear Contact\n\n\n  const clearContacts = () => {\n    dispatch({\n      type: CLEAR_CONTACTS\n    });\n  }; //Set current contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //Clear current contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //Filter Contact\n\n\n  const filterContact = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; //clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      addContact,\n      filtered: state.filtered,\n      error: state.error,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContact,\n      clearFilter,\n      getContacts,\n      clearContacts\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/blackice/Desktop/Udemy_Project/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","ContactContext","contactReducer","GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","CLEAR_CONTACTS","ContactState","props","initialState","contacts","current","filtered","error","state","dispatch","getContacts","res","get","type","payload","data","err","response","msg","addContact","contact","config","headers","post","deleteContact","id","delete","clearContacts","setCurrent","clearCurrent","updateContact","filterContact","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport ContactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\nimport {\n  GET_CONTACTS,\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n  CONTACT_ERROR,\n  CLEAR_CONTACTS\n} from \"../types\";\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  // Get Contacts\n\n  const getContacts = async () => {\n    try {\n      const res = await axios.get('/api/contacts');\n      dispatch ({\n        type: GET_CONTACTS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  };\n\n  //Add Contact\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch ({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  };\n  //Delete Contact\n\n  const deleteContact =  async id => {\n    try {\n      await axios.delete(`/api/contacts/${id}`);\n\n      dispatch({\n        type: DELETE_CONTACT,\n        payload: id\n      });\n    } catch (err) {\n      dispatch ({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }}\n  // clear Contact\n  const clearContacts = () => {\n    dispatch({ type: CLEAR_CONTACTS });\n  };\n  //Set current contact\n\n  const setCurrent = contact => {\n    dispatch({ type: SET_CURRENT, payload: contact });\n  };\n  //Clear current contact\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n  //Update Contact\n  const updateContact = contact => {\n    dispatch({ type: UPDATE_CONTACT, payload: contact });\n  };\n  //Filter Contact\n  const filterContact = text => {\n    dispatch({ type: FILTER_CONTACTS, payload: text });\n  };\n\n  //clear Filter\n\n  const clearFilter = () => {\n    dispatch({ type: CLEAR_FILTER });\n  };\n  return (\n    <ContactContext.Provider\n      value={{\n        contacts: state.contacts,\n        current: state.current,\n        addContact,\n        filtered: state.filtered,\n        error: state.error,\n        deleteContact,\n        setCurrent,\n        clearCurrent,\n        updateContact,\n        filterContact,\n        clearFilter,\n        getContacts,\n        clearContacts\n      }}\n    >\n      {props.children}\n    </ContactContext.Provider>\n  );\n};\n\nexport default ContactState;\n"]},"metadata":{},"sourceType":"module"}