{"ast":null,"code":"import _slicedToArray from \"/Users/blackice/Desktop/Udemy_Project/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/blackice/Desktop/Udemy_Project/contact-keeper/client/src/context/contact/ContactState.js\";\nimport react, { userReducer } from \"react\";\nimport uuid from \"uuid\";\nimport contactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from \"../types\";\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [{\n      id: 1,\n      name: 'jill Johnson',\n      phone: '111-111-1111',\n      type: 'personal'\n    }, {\n      id: 2,\n      name: 'sara watson',\n      phone: '111-111-3451',\n      type: 'personal'\n    }, {\n      id: 3,\n      name: 'Harry White',\n      phone: '671-453-3451',\n      type: 'personal'\n    }]\n  };\n\n  const _userReducer = userReducer(constctReducer, initialState),\n        _userReducer2 = _slicedToArray(_userReducer, 2),\n        state = _userReducer2[0],\n        dispatch = _userReducer2[1]; //Add Contact\n  //Delete Contact\n  //Set current contact\n  //Clear current contact\n  //Update Contact\n  //Filter Contact\n  //clear Filter\n\n\n  return React.createElement(contactContext.Provider, {\n    value: {\n      contacts: state.contacts\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/blackice/Desktop/Udemy_Project/contact-keeper/client/src/context/contact/ContactState.js"],"names":["react","userReducer","uuid","contactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","ContactState","props","initialState","contacts","id","name","phone","type","constctReducer","state","dispatch","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SACEC,WADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,cALF,EAMEC,eANF,EAOEC,YAPF,QAQO,UARP;;AAWA,MAAMC,YAAY,GAAGC,KAAK,IAAG;AACzB,QAAMC,YAAY,GAAE;AAChBC,IAAAA,QAAQ,EAAC,CACL;AACIC,MAAAA,EAAE,EAAC,CADP;AAEIC,MAAAA,IAAI,EAAE,cAFV;AAGIC,MAAAA,KAAK,EAAC,cAHV;AAIIC,MAAAA,IAAI,EAAC;AAJT,KADK,EAOL;AACIH,MAAAA,EAAE,EAAC,CADP;AAEIC,MAAAA,IAAI,EAAE,aAFV;AAGIC,MAAAA,KAAK,EAAC,cAHV;AAIIC,MAAAA,IAAI,EAAC;AAJT,KAPK,EAaL;AACIH,MAAAA,EAAE,EAAC,CADP;AAEIC,MAAAA,IAAI,EAAE,aAFV;AAGIC,MAAAA,KAAK,EAAC,cAHV;AAIIC,MAAAA,IAAI,EAAC;AAJT,KAbK;AADO,GAApB;;AADyB,uBAuBDlB,WAAW,CAACmB,cAAD,EAAiBN,YAAjB,CAvBV;AAAA;AAAA,QAuBnBO,KAvBmB;AAAA,QAuBZC,QAvBY,qBAyBzB;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;;;AAEA,SACI,oBAAC,cAAD,CAAgB,QAAhB;AACA,IAAA,KAAK,EAAE;AACHP,MAAAA,QAAQ,EAACM,KAAK,CAACN;AADZ,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMKF,KAAK,CAACU,QANX,CADJ;AAWH,CAlDD;;AAoDA,eAAeX,YAAf","sourcesContent":["import react, { userReducer } from \"react\";\nimport uuid from \"uuid\";\nimport contactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\nimport {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER\n} from \"../types\";\n\n\nconst ContactState = props =>{\n    const initialState ={\n        contacts:[\n            {\n                id:1,\n                name: 'jill Johnson',\n                phone:'111-111-1111',\n                type:'personal'\n            },\n            {\n                id:2,\n                name: 'sara watson',\n                phone:'111-111-3451',\n                type:'personal'\n            },\n            {\n                id:3,\n                name: 'Harry White',\n                phone:'671-453-3451',\n                type:'personal'\n            }\n        ]\n    }\n    const[state, dispatch]= userReducer(constctReducer, initialState)\n\n    //Add Contact\n\n    //Delete Contact\n\n    //Set current contact\n\n    //Clear current contact\n    \n    //Update Contact\n\n    //Filter Contact\n\n    //clear Filter\n\n    return (\n        <contactContext.Provider \n        value={{\n            contacts:state.contacts\n        }}\n        >\n\n            {props.children}\n        </contactContext.Provider>\n    )\n\n};\n\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}