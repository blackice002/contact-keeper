{"ast":null,"code":"import _slicedToArray from \"/Users/blackice/Desktop/Udemy_Project/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/blackice/Desktop/Udemy_Project/contact-keeper/client/src/context/contact/ContactState.js\";\nimport React, { useReducer } from \"react\";\nimport uuid from \"uuid\";\nimport ContactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from \"../types\";\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [{\n      id: 1,\n      name: \"jill Johnson\",\n      email: \"jillJohnson@gmail.com\",\n      phone: \"111-111-1111\",\n      type: \"personal\"\n    }, {\n      id: 2,\n      name: \"sara watson\",\n      phone: \"111-111-3451\",\n      email: \"watsonSararr@gmail.com\",\n      type: \"personal\"\n    }, {\n      id: 3,\n      name: \"Harry White\",\n      phone: \"671-453-3451\",\n      email: \"wharrry@yahoo.com\",\n      type: \"professional\"\n    }],\n    current: null,\n    filtered: null\n  };\n\n  const _useReducer = useReducer(contactReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //Add Contact\n\n\n  const addContact = contact => {\n    contact.id = uuid.v4();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; //Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //Set current contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //Clear current contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //Filter Contact\n\n\n  const filterContact = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; //clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      addContact,\n      filtered: state.filtered,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContact,\n      clearFilter\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/blackice/Desktop/Udemy_Project/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","uuid","ContactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","ContactState","props","initialState","contacts","id","name","email","phone","type","current","filtered","state","dispatch","addContact","contact","v4","payload","deleteContact","setCurrent","clearCurrent","updateContact","filterContact","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\nimport uuid from \"uuid\";\nimport ContactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\nimport {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER\n} from \"../types\";\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [\n      {\n        id: 1,\n        name: \"jill Johnson\",\n        email: \"jillJohnson@gmail.com\",\n        phone: \"111-111-1111\",\n        type: \"personal\"\n      },\n      {\n        id: 2,\n        name: \"sara watson\",\n        phone: \"111-111-3451\",\n        email: \"watsonSararr@gmail.com\",\n        type: \"personal\"\n      },\n      {\n        id: 3,\n        name: \"Harry White\",\n        phone: \"671-453-3451\",\n        email: \"wharrry@yahoo.com\",\n        type: \"professional\"\n      }\n    ],\n    current: null,\n    filtered: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  //Add Contact\n\n  const addContact = contact => {\n    contact.id = uuid.v4();\n    dispatch({ type: ADD_CONTACT, payload: contact });\n  };\n  //Delete Contact\n\n  const deleteContact = id => {\n    dispatch({ type: DELETE_CONTACT, payload: id });\n  };\n  //Set current contact\n\n  const setCurrent = contact => {\n    dispatch({ type: SET_CURRENT, payload: contact });\n  };\n  //Clear current contact\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n  //Update Contact\n  const updateContact = contact => {\n    dispatch({ type: UPDATE_CONTACT, payload: contact });\n  };\n  //Filter Contact\n  const filterContact = text => {\n    dispatch({ type: FILTER_CONTACTS, payload: text });\n  };\n\n\n  //clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({type: CLEAR_FILTER})\n  }\n  return (\n    <ContactContext.Provider\n      value={{\n        contacts: state.contacts,\n        current: state.current,\n        addContact,\n        filtered:state.filtered,\n        deleteContact,\n        setCurrent,\n        clearCurrent,\n        updateContact,\n        filterContact,\n        clearFilter\n      }}\n    >\n      {props.children}\n    </ContactContext.Provider>\n  );\n};\n\nexport default ContactState;\n"]},"metadata":{},"sourceType":"module"}